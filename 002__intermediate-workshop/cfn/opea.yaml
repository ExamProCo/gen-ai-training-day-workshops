AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy ChatQnA to an EC2 instance.
Parameters:
  InstanceType:
    Description: Intel Xeon 4 Scalable Processor
    Type: String
    Default: m7i.4xlarge
  HFAPIKey:
    Description: Your Hugging Face API token
    Type: String
    NoEcho: true
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID where the EC2 instance will be launched.

Resources:
  SSMforEC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Policies:
        - PolicyName: 'ReadHFApiTokenParameter'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameter'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/huggingface/api_token'
      RoleName: !Sub SSMforEC2-${AWS::StackName}

  SSMforEC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: !Sub SSMforEC2InstanceProfile-${AWS::StackName}
      Roles:
        - !Ref 'SSMforEC2Role'

  HFApiTokenParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: '/huggingface/api_token'
      Type: String
      Value: !Ref HFAPIKey

  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allow HTTP traffic from the internet'
      VpcId: !Ref 'VpcId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8888
          ToPort: 8888
          CidrIp: '0.0.0.0/0'

  ChatQnAEC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn: HFApiTokenParameter
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMIID]
      IamInstanceProfile: !Ref 'SSMforEC2InstanceProfile'
      SecurityGroupIds:
        - !Ref 'EC2SecurityGroup'
      BlockDeviceMappings:
        - DeviceName: '/dev/sda1'
          Ebs:
            VolumeSize: 80
            VolumeType: gp3
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -x
          sudo apt install unzip -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          git clone https://github.com/opea-project/GenAIExamples.git
          cd GenAIExamples/ChatQnA/docker_compose
          chmod +x ./install_docker.sh
          ./install_docker.sh
          sudo groupadd docker
          sudo usermod -aG docker $USER
          newgrp docker
          export HUGGINGFACEHUB_API_TOKEN=$(aws ssm get-parameter --name /huggingface/api_token --with-decryption --query 'Parameter.Value' --output text)
          export host_ip=$(hostname -I | awk '{print $1}')
          export no_proxy="localhost"
          cd intel/cpu/xeon
          sed -i 's/Intel/meta-llama/g' ./set_env.sh
          sed -i 's/neural-chat-7b-v3-3/Llama-3.2-1B-Instruct/g' ./set_env.sh
          chmod +x ./set_env.sh
          source ./set_env.sh
          docker compose -f compose.yaml up -d
Mappings:
  RegionMap:
    us-east-1:
      AMIID: 'ami-0866a3c8686eaeeba'
Outputs:
  EC2InstancePublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt 'ChatQnAEC2Instance.PublicIp'
